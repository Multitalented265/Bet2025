// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(cuid())
  name                    String
  email                   String    @unique
  emailVerified           DateTime?
  password                String
  status                  String    @default("Active") // Active, Suspended
  balance                 Decimal   @default(50000)
  joined                  DateTime  @default(now())
  notifyOnBetStatusUpdates Boolean   @default(true)
  
  bets     Bet[]
  transactions Transaction[]
  accounts Account[]
  sessions Session[]
}

model Candidate {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  image       String
  hint        String
  color       String
  totalBets   Decimal  @default(0)
  status      String   @default("Active") // Active, Withdrawn
  
  bets        Bet[]
}

model Bet {
  id            String   @id @default(cuid())
  amount        Decimal
  placedDate    DateTime @default(now())
  status        String   @default("Pending") // Pending, Won, Lost

  userId        String
  user          User     @relation(fields: [userId], references: [id])
  
  candidateId   Int
  candidate     Candidate @relation(fields: [candidateId], references: [id])
  candidateName String
}

model Transaction {
  id          String   @id @default(cuid())
  type        String   // Deposit, Withdrawal
  amount      Decimal
  fee         Decimal
  date        DateTime @default(now())
  
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model SupportTicket {
  id          String @id @default(cuid())
  user        Json
  subject     String
  message     String
  date        DateTime @default(now())
  status      String @default("Open") // Open, Closed
}

model AdminSettings {
  id                    Int     @id @default(1)
  enable2fa             Boolean @default(false)
  notifyOnNewUser       Boolean @default(true)
  notifyOnLargeBet      Boolean @default(false)
  notifyOnLargeDeposit  Boolean @default(true)
}

// NextAuth Models
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
